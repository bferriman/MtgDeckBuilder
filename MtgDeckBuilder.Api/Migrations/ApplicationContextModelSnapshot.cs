// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MtgDeckBuilder.Api.Data;

#nullable disable

namespace MtgDeckBuilder.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MtgDeckBuilder.Api.Data.DeckItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeckItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Golgari Saprolings"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Grixis Fun Stuff"
                        });
                });

            modelBuilder.Entity("MtgDeckBuilder.Api.Data.DeckItem", b =>
                {
                    b.OwnsOne("MtgDeckBuilder.Api.Data.Card", "Commander", b1 =>
                        {
                            b1.Property<int>("DeckItemId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ScryfallId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeckItemId");

                            b1.ToTable("DeckItems");

                            b1.WithOwner()
                                .HasForeignKey("DeckItemId");

                            b1.HasData(
                                new
                                {
                                    DeckItemId = 1,
                                    Name = "Slimefoot, the Stowaway",
                                    ScryfallId = "e8815cd9-7032-445a-aebc-cfc19bd51ee4"
                                },
                                new
                                {
                                    DeckItemId = 2,
                                    Name = "Nicol Bolas, the Ravager // Nicol Bolas, the Arisen",
                                    ScryfallId = "7b215968-93a6-4278-ac61-4e3e8c3c3943"
                                });
                        });

                    b.Navigation("Commander")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
